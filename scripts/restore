#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

if [[ ! ${GNINDEX_HOST:?Requires GNINDEX_HOST} \
   || ! ${GNINDEX_USERNAME:?Requires GNINDEX_USERNAME} \
   || ! ${GNINDEX_PASSWORD:?Requires GNINDEX_PASSWORD} ]]; then
  exit 1
fi

dir=$(dirname ${BASH_SOURCE[0]})
csv_dir="/tmp/gnindex_pg/"
gni_dir="/tmp/gni_mysql/"

cp ${gni_dir}data_sources.csv ${csv_dir}

delete_indexes="${dir}/sql/gnindex_delete_indexes.sql"
create_indexes="${dir}/sql/gnindex_create_indexes.sql"
db=gnindex
declare -a tables=(
                data_sources
                name_string_indices
                name_strings
                name_strings__author_words
                name_strings__genus
                name_strings__species
                name_strings__subspecies
                name_strings__uninomial
                name_strings__year
                vernacular_string_indices
                vernacular_strings
              );

function sql {
  PGPASSWORD=${GNINDEX_PASSWORD} psql -U ${GNINDEX_USERNAME} -h ${GNINDEX_HOST} -d ${db} -c $1 # -A -t
}

function sql_file {
  PGPASSWORD=${GNINDEX_PASSWORD} psql -U ${GNINDEX_USERNAME} -h ${GNINDEX_HOST} -d ${db} < $1 # 2> /dev/null
}

function timestamp {
  echo Time: $(date +"%H:%M:%S")
}

# Remove indexes
timestamp
sql_file ${delete_indexes}

# Import data
for table in ${tables[@]}
do
  timestamp
  echo "Processing ${table}"
  sql "TRUNCATE TABLE ${table}"
  if [[ ${table} == name_strings ]]; then
    sql "\COPY ${table} FROM '${csv_dir}${table}.csv' WITH (FORMAT csv, HEADER, FORCE_NOT_NULL(name))"
  else
    sql "\COPY ${table} FROM '${csv_dir}${table}.csv' WITH (FORMAT csv, HEADER)"
  fi
done

# Recreate indexes
timestamp
sql_file ${create_indexes}
timestamp
